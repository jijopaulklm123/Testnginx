server { # intdownloadred.alamy.com/.de directly connects to Download servers for Download API

	listen 80;
	listen 443 ssl http2;
	server_name $downloaddomain.alamy.*;
	server_name $downloaddomain.alamyimages.*;

	location ~* ^/(a2d-image-download[.]asp|a2d-video-download[.]aspx) { # Download server API access
		
		proxy_pass http://download_servers;
	}

	location ~* ^/(a2d-acionline-image-download[.]asp|downloads/|downloads_intwebred/|intwebred_downloads/) { # Download server API access
		proxy_pass http://download_servers;
	}

	location ~* ^/thumbs/4/ { # Search thumbs rule
		proxy_no_cache $host; # Proxy_no_cache will always be 'true' because $host always has a value, as a result content in this location will not be cached by Nginx
		proxy_set_header Host testc1.alamy.com; # Set valid Host header for connection to AWS thumbs server
		proxy_ssl_server_name on; # Allows TLS connection to CloudFront which is SNI based
		proxy_pass https://testc1.alamy.com;
	}

	location ~* ^/thumbs/ { # Thumbs rule
		proxy_set_header Host testc7.alamy.com; # Set valid Host header for connection to AWS thumbs server
		proxy_ssl_server_name on; # Allows TLS connection to CloudFront which is SNI based
		proxy_pass https://testc7.alamy.com;
	}
	
	include /etc/nginx/conf.d/includes/error_page.conf; # Include error page location blocks

}
server { # intdownload2red.alamy.* image request routes via download handler in AWS and video to on-premise download server 

		listen 80;
		listen 443 ssl http2;
		set $downloadhandler_dev "devdownloadhandler-docker.alamy.com";
		server_name ~^(intdownload2red)[.]alamy[.](?<tld>com|de|es|fr|it|uk|pt)$;

		proxy_read_timeout 300s; # Increased timeout when waiting for response from backend server = 5 mins
	
		location ~* ^/(downloads/en/video|freedownloads) { # Request for download proxy to onpremise web server

                return 301 https://intwebred.alamy.$tld$request_uri;

		}

		location /downloads/ { # Download server rules
	
                proxy_set_header Host $downloadhandler_dev;
                proxy_pass http://$downloadhandler_dev;
                include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
		}
	
		include /etc/nginx/conf.d/includes/error_page.conf; # Include error page location blocks

}
server { # intdownload2red.alamy.* image request routes via download handler in AWS and video to on-premise download server

               listen 80;
               listen 443 ssl http2;
               set $downloadhandler_dev "downloadhandlertest.alamy.com";
               server_name intdownload2red.alamyimages.fr;

                proxy_read_timeout 300s; # Increased timeout when waiting for response from backend server = 5 mins

               location ~* ^/(downloads/en/video|freedownloads) { # Request for download proxy to onpremise web server

               return 301 https://intwebred.alamyimages.fr$request_uri;

                }

                location /downloads/ { # Download server rules

               proxy_set_header Host $downloadhandler_dev;
              proxy_pass http://$downloadhandler_dev;
             include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
            }

               include /etc/nginx/conf.d/includes/error_page.conf; # Include error page location blocks

}
