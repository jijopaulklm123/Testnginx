server { # Redirect http requests to https

	listen 80;
	server_name $domain.alamy.es $domain.alamy.it $domain.alamy.uk $domain.alamyimages.fr;

	# Allow by default, block access from blacklisted IPs
	include /etc/nginx/conf.d/includes/ipsets/blacklist; # Deny access from blacklisted IPs

	proxy_cache alamyweb_cache; # Use the cache area defined in the http config

	limit_req zone=http_req_limit burst=50 nodelay; # Default rate limit defined in http config
	limit_req zone=http_req_limit_exceptions burst=50 nodelay; # Excempted rate limit defined in http config


	return 301 https://$host$request_uri;

}

server {

	listen 443 ssl http2;
	server_name ~^($domain)[.](alamy|alamyimages)[.](?<tld>es|fr|it|uk)$; # All International requests will use this config, <tld> named regex group used to extract to a variable the domain requested

	# Allow by default, block access from blacklisted IPs
	include /etc/nginx/conf.d/includes/ipsets/blacklist; # Deny access from blacklisted IPs

	proxy_cache alamyweb_cache; # Use the cache area defined in the http config

	proxy_read_timeout 300s; # Increased timeout when waiting for response from backend server = 5 mins

	limit_req zone=http_req_limit burst=50 nodelay; # Default rate limit defined in http config
	limit_req zone=http_req_limit_exceptions burst=50 nodelay; # Excempted rate limit defined in http config

	location ~* ^/(applicationvariableeditor[.]aspx|applicationvariableeditorforbot[.]aspx|applicationvariableeditor-arm[.]aspx|mediacomp/applicationvariableeditor[.]aspx|mediacomp/applicationvariableeditorforbot[.]aspx|mediacomp/applicationvariableeditor-arm[.]aspx|appviewer[.]aspx|artcomusers[.]xml|cache[.]asp|clientip[.]asp|clientip2[.]asp|set-trace[.]aspx|constringeditor[.]aspx|geoip[.]asp|refreshfraudwhitelist[.]asp|refresh-pricing[.]asp|serverheaders[.]asp|servervariable[.]asp|stopwords[.]xml|webconfigeditor[.]aspx|captcha/|deutsch/(stopwords[.]xml|downloadimage/refreshfraudwhiteList[.]aspx)|downloadimage/(test[.]aspx|refreshfraudwhitelist[.]aspx|geoiptest[.]aspx)|mediacomp/(generatecidoruserid[.]aspx|alamyrefwords[.]aspx)|myimages_v2[.]4/reports/rpt_ascategory[.]aspx|forcelogon[.]asp|mediacomp/StopWords[.]aspx|pressrelease/(login[.]aspx|admin/password[.]aspx)|purchase/creditcardpurchase[.]asmx/addccforcustomer) { # Block external access to specific files on Web servers
		include /etc/nginx/conf.d/includes/ipsets/internal-networks;
		include /etc/nginx/conf.d/includes/ipsets/alamy-offices;
		deny all;
		proxy_pass http://web_servers;

		error_page 401 403 =301 $scheme://$host; # Redirect denied requests to homepage

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	location ~* ^/(search/(webconfigeditor[.]aspx|cdnconfiguration[.]aspx|appconfigreader[.]aspx|appconfigeditor[.]aspx|captcha/)) { # Block external access to specific files on SearchWeb servers
		include /etc/nginx/conf.d/includes/ipsets/internal-networks;
		include /etc/nginx/conf.d/includes/ipsets/alamy-offices;
		deny all;
		proxy_pass http://search_servers;

		error_page 401 403 =301 $scheme://$host; # Redirect denied requests to homepage

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	location /sitemaps/sitemap_2.0/ { # Sitemaps2 redirected to S3
		proxy_no_cache $host; # Proxy_no_cache will always be 'true' because $host always has a value, as a result content in this location will not be cached by Nginx
		proxy_set_header Host alamy-sitemaps.s3-eu-west-1.amazonaws.com;
		proxy_pass https://alamy-sitemaps.s3-eu-west-1.amazonaws.com;

		rewrite ^/sitemaps/sitemap_2.0/(.*) /sitemap_2_0/$tld/$1 break; # Using a variable changes the way forward requests are created, rewrite used to fix - see https://tenzer.dk/nginx-with-dynamic-upstreams/

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	location /sitemaps/ { # Sitemaps redirected to S3
		proxy_no_cache $host; # Proxy_no_cache will always be 'true' because $host always has a value, as a result content in this location will not be cached by Nginx
		proxy_set_header Host alamy-sitemaps.s3-eu-west-1.amazonaws.com;
		proxy_pass https://alamy-sitemaps.s3-eu-west-1.amazonaws.com;

		# $tld extracted from requested host is used to build forwarded S3 request for sitemap
		rewrite ^/sitemaps/(.*) /$tld/$1 break; # Using a variable changes the way forward requests are created, rewrite used to fix - see https://tenzer.dk/nginx-with-dynamic-upstreams/

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	location ~* ^/(downloads/en/video|freedownloads)/ { # Download server rules video download request proxy to on-premise IIS server
		proxy_pass http://download_servers;

	}

	location ~* ^/downloads/ { # Download server rules
		proxy_set_header Host downloadhandlerdev.alamy.com;
		proxy_pass https://downloadhandlerdev.alamy.com;

	}

	location ~* ^/(category|categories|galleries)/(video-gallery[.]asp|galleries[.]asp|footage-gallery[.]asp|default[.]asp|blank[.]html) { # SearchWeb server exception rules
		proxy_pass http://web_servers;

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	location ~* ^/(search[.]html|stock-photo/|search/|galleries/|category/|categories/|photos-images/|fotos-imagenes/|fotos-imagens/|imagenes/|fotos-bilder/|archivio-fotografico/|fotos-immagini/) { # SearchWeb server rules
		proxy_pass http://search_servers;
	}

	location ~* "^/(foto-(.*)[.]html|photo-image-(.*)[.]html|foto-immagine-(.*)[.]html|foto-imagem-(.*)[.]html|.+?-image[0-9]{3,12}[.]html)" { # Image page rule exists only so that image pages can be exempted from content rewrite
		proxy_pass http://web_servers;
	}

	location / { # Default location
		proxy_pass http://web_servers;

		include /etc/nginx/conf.d/includes/subs_filter.conf; # Rewrite content for .com & .de http > https
	}

	include /etc/nginx/conf.d/includes/error_page.conf; # Include error page location blocks
}
